"""add process code models

Revision ID: 8da4ec355dba
Revises: d2744cf123ff
Create Date: 2025-01-17 23:19:02.698909

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8da4ec355dba'
down_revision = 'd2744cf123ff'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oog_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('name_eng', sa.String(length=50), nullable=True),
    sa.Column('name_chn', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_name')
    )
    op.create_table('oog_part_num',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('pn', sa.String(length=20), nullable=True),
    sa.Column('ver', sa.String(length=10), nullable=True),
    sa.Column('pn_create_dt', sa.DateTime(), nullable=True),
    sa.Column('change_info', sa.Text(), nullable=True),
    sa.Column('pre_part_num_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['oog_user.id'], ),
    sa.ForeignKeyConstraint(['pre_part_num_id'], ['oog_part_num.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['oog_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='part number version tracking'
    )
    op.create_table('oog_proc_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('p_code', sa.String(length=10), nullable=True),
    sa.Column('p_name', sa.String(length=20), nullable=True),
    sa.Column('p_normal_lt', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['oog_user.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['oog_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oog_sub_proc_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('p_code', sa.String(length=10), nullable=True),
    sa.Column('p_name', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['oog_user.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['oog_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oog_pn_layer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('layer_code', sa.Integer(), nullable=True),
    sa.Column('layer_name', sa.String(length=20), nullable=True),
    sa.Column('part_num_id', sa.Integer(), nullable=True),
    sa.Column('next_pn_layer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['oog_user.id'], ),
    sa.ForeignKeyConstraint(['next_pn_layer_id'], ['oog_pn_layer.id'], ),
    sa.ForeignKeyConstraint(['part_num_id'], ['oog_part_num.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['oog_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oog_pn_layer_proc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('seq', sa.Integer(), nullable=True),
    sa.Column('proc_code_seq', sa.Integer(), nullable=True),
    sa.Column('pn_layer_id', sa.Integer(), nullable=True),
    sa.Column('proc_code_id', sa.Integer(), nullable=True),
    sa.Column('proc_code_old_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['oog_user.id'], ),
    sa.ForeignKeyConstraint(['pn_layer_id'], ['oog_pn_layer.id'], ),
    sa.ForeignKeyConstraint(['proc_code_id'], ['oog_proc_code.id'], ),
    sa.ForeignKeyConstraint(['proc_code_old_id'], ['oog_proc_code.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['oog_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oog_pn_layer_sproc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('seq', sa.Integer(), nullable=True),
    sa.Column('sub_proc_code_seq', sa.Integer(), nullable=True),
    sa.Column('pcs_cnt', sa.Integer(), nullable=True),
    sa.Column('detail_info', sa.Text(), nullable=True),
    sa.Column('pn_layer_proc_id', sa.Integer(), nullable=True),
    sa.Column('sub_proc_code_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['oog_user.id'], ),
    sa.ForeignKeyConstraint(['pn_layer_proc_id'], ['oog_pn_layer_proc.id'], ),
    sa.ForeignKeyConstraint(['sub_proc_code_id'], ['oog_sub_proc_code.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['oog_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oog_yield_rate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('yr_date', sa.Date(), nullable=True),
    sa.Column('yr', sa.Float(), nullable=True),
    sa.Column('detail_info', sa.Text(), nullable=True),
    sa.Column('pdbu_product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['oog_user.id'], ),
    sa.ForeignKeyConstraint(['pdbu_product_id'], ['oog_pdbu_product.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['oog_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='yield rate data'
    )
    op.add_column('oog_asset', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_asset', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_asset', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_asset', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_asset', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_asset', 'oog_user', ['updated_user_id'], ['id'])
    op.add_column('oog_bg', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_bg', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_bg', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_bg', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_bg', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_bg', 'oog_user', ['updated_user_id'], ['id'])
    op.create_table_comment(
        'oog_bg',
        'Business Group (BG1, BG2, BG3 etc)',
        existing_comment='Business Group. BG1, BG2, BG3 etc',
        schema=None
    )
    op.add_column('oog_bu', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_bu', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_bu', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_bu', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_bu', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_bu', 'oog_user', ['updated_user_id'], ['id'])
    op.create_table_comment(
        'oog_bu',
        'Business Unit (HDI, FPC, MSAP, RPCB, BTK etc)',
        existing_comment='Business Unit. HDI, FPC, MSAP, RPCB, BTK etc',
        schema=None
    )
    op.add_column('oog_company', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_company', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_company', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_company', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_company', sa.Column('location_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_company', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_company', 'oog_location', ['location_id'], ['id'])
    op.create_foreign_key(None, 'oog_company', 'oog_user', ['updated_user_id'], ['id'])
    op.add_column('oog_currency_ex', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_currency_ex', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_currency_ex', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_currency_ex', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_currency_ex', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_currency_ex', 'oog_user', ['updated_user_id'], ['id'])
    op.add_column('oog_customer', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_customer', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_customer', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_customer', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_customer', 'oog_user', ['updated_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_customer', 'oog_user', ['created_user_id'], ['id'])
    op.create_table_comment(
        'oog_customer',
        'company group can be a customer',
        existing_comment='a company of our company group can be a customer. but need to add new customer to represent it.',
        schema=None
    )
    op.add_column('oog_location', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_location', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_location', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_location', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_location', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_location', 'oog_user', ['updated_user_id'], ['id'])
    op.add_column('oog_machine', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_machine', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_machine', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_machine', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_machine', 'oog_user', ['updated_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_machine', 'oog_user', ['created_user_id'], ['id'])
    op.add_column('oog_pdbu_product', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_pdbu_product', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_pdbu_product', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_pdbu_product', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_pdbu_product', sa.Column('detail_info', sa.Text(), nullable=True))
    op.create_foreign_key(None, 'oog_pdbu_product', 'oog_user', ['updated_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_pdbu_product', 'oog_user', ['created_user_id'], ['id'])
    op.drop_column('oog_pdbu_product', 'detial_info')
    op.add_column('oog_plant', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_plant', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_plant', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_plant', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_plant', 'oog_user', ['updated_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_plant', 'oog_user', ['created_user_id'], ['id'])
    op.create_table_comment(
        'oog_plant',
        'specific building of a factory (SA03, SA02)',
        existing_comment='specific building of a factory. like SA03, SA02',
        schema=None
    )
    op.add_column('oog_plant_district', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_plant_district', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_plant_district', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_plant_district', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_plant_district', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_plant_district', 'oog_user', ['updated_user_id'], ['id'])
    op.create_table_comment(
        'oog_plant_district',
        'place where many plants located (SA, SB, HA, HB, QA etc)',
        existing_comment='the place where many plants located. like SA, SB, HA, HB, QA etc.',
        schema=None
    )
    op.add_column('oog_product', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_product', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_product', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_product', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_product', 'oog_user', ['updated_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_product', 'oog_user', ['created_user_id'], ['id'])
    op.create_table_comment(
        'oog_product',
        'includes semi-products',
        existing_comment='include semi-prodcut',
        schema=None
    )
    op.add_column('oog_product_share_ver', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_product_share_ver', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_product_share_ver', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_product_share_ver', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_product_share_ver', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_product_share_ver', 'oog_user', ['updated_user_id'], ['id'])
    op.create_table_comment(
        'oog_product_share_ver',
        'share version',
        existing_comment='share version between products',
        schema=None
    )
    op.add_column('oog_shipping_site', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_shipping_site', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_shipping_site', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_shipping_site', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_shipping_site', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_shipping_site', 'oog_user', ['updated_user_id'], ['id'])
    op.create_table_comment(
        'oog_shipping_site',
        'customer may have multiple receiving sites',
        existing_comment='a customer may have may sites to receive you products',
        schema=None
    )
    op.add_column('oog_supplier', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_supplier', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_supplier', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_supplier', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_supplier', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_supplier', 'oog_user', ['updated_user_id'], ['id'])
    op.create_table_comment(
        'oog_supplier',
        'machine, material, and outsourcing suppliers',
        existing_comment='not only machine suppliers, but also material suppliers, out outsourcing suppliers etc.',
        schema=None
    )
    op.add_column('oog_supplier_pod', sa.Column('created_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_supplier_pod', sa.Column('updated_dt', sa.DateTime(), nullable=True))
    op.add_column('oog_supplier_pod', sa.Column('created_user_id', sa.Integer(), nullable=True))
    op.add_column('oog_supplier_pod', sa.Column('updated_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oog_supplier_pod', 'oog_user', ['created_user_id'], ['id'])
    op.create_foreign_key(None, 'oog_supplier_pod', 'oog_user', ['updated_user_id'], ['id'])
    op.create_table_comment(
        'oog_supplier_pod',
        'Place of Delivery (supplier may have multiple delivery places)',
        existing_comment='POD: Place Of Delivery. A supplier many have many place to delivery the products.',
        schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'oog_supplier_pod',
        'POD: Place Of Delivery. A supplier many have many place to delivery the products.',
        existing_comment='Place of Delivery (supplier may have multiple delivery places)',
        schema=None
    )
    op.drop_constraint(None, 'oog_supplier_pod', type_='foreignkey')
    op.drop_constraint(None, 'oog_supplier_pod', type_='foreignkey')
    op.drop_column('oog_supplier_pod', 'updated_user_id')
    op.drop_column('oog_supplier_pod', 'created_user_id')
    op.drop_column('oog_supplier_pod', 'updated_dt')
    op.drop_column('oog_supplier_pod', 'created_dt')
    op.create_table_comment(
        'oog_supplier',
        'not only machine suppliers, but also material suppliers, out outsourcing suppliers etc.',
        existing_comment='machine, material, and outsourcing suppliers',
        schema=None
    )
    op.drop_constraint(None, 'oog_supplier', type_='foreignkey')
    op.drop_constraint(None, 'oog_supplier', type_='foreignkey')
    op.drop_column('oog_supplier', 'updated_user_id')
    op.drop_column('oog_supplier', 'created_user_id')
    op.drop_column('oog_supplier', 'updated_dt')
    op.drop_column('oog_supplier', 'created_dt')
    op.create_table_comment(
        'oog_shipping_site',
        'a customer may have may sites to receive you products',
        existing_comment='customer may have multiple receiving sites',
        schema=None
    )
    op.drop_constraint(None, 'oog_shipping_site', type_='foreignkey')
    op.drop_constraint(None, 'oog_shipping_site', type_='foreignkey')
    op.drop_column('oog_shipping_site', 'updated_user_id')
    op.drop_column('oog_shipping_site', 'created_user_id')
    op.drop_column('oog_shipping_site', 'updated_dt')
    op.drop_column('oog_shipping_site', 'created_dt')
    op.create_table_comment(
        'oog_product_share_ver',
        'share version between products',
        existing_comment='share version',
        schema=None
    )
    op.drop_constraint(None, 'oog_product_share_ver', type_='foreignkey')
    op.drop_constraint(None, 'oog_product_share_ver', type_='foreignkey')
    op.drop_column('oog_product_share_ver', 'updated_user_id')
    op.drop_column('oog_product_share_ver', 'created_user_id')
    op.drop_column('oog_product_share_ver', 'updated_dt')
    op.drop_column('oog_product_share_ver', 'created_dt')
    op.create_table_comment(
        'oog_product',
        'include semi-prodcut',
        existing_comment='includes semi-products',
        schema=None
    )
    op.drop_constraint(None, 'oog_product', type_='foreignkey')
    op.drop_constraint(None, 'oog_product', type_='foreignkey')
    op.drop_column('oog_product', 'updated_user_id')
    op.drop_column('oog_product', 'created_user_id')
    op.drop_column('oog_product', 'updated_dt')
    op.drop_column('oog_product', 'created_dt')
    op.create_table_comment(
        'oog_plant_district',
        'the place where many plants located. like SA, SB, HA, HB, QA etc.',
        existing_comment='place where many plants located (SA, SB, HA, HB, QA etc)',
        schema=None
    )
    op.drop_constraint(None, 'oog_plant_district', type_='foreignkey')
    op.drop_constraint(None, 'oog_plant_district', type_='foreignkey')
    op.drop_column('oog_plant_district', 'updated_user_id')
    op.drop_column('oog_plant_district', 'created_user_id')
    op.drop_column('oog_plant_district', 'updated_dt')
    op.drop_column('oog_plant_district', 'created_dt')
    op.create_table_comment(
        'oog_plant',
        'specific building of a factory. like SA03, SA02',
        existing_comment='specific building of a factory (SA03, SA02)',
        schema=None
    )
    op.drop_constraint(None, 'oog_plant', type_='foreignkey')
    op.drop_constraint(None, 'oog_plant', type_='foreignkey')
    op.drop_column('oog_plant', 'updated_user_id')
    op.drop_column('oog_plant', 'created_user_id')
    op.drop_column('oog_plant', 'updated_dt')
    op.drop_column('oog_plant', 'created_dt')
    op.add_column('oog_pdbu_product', sa.Column('detial_info', sa.CLOB(), nullable=True))
    op.drop_constraint(None, 'oog_pdbu_product', type_='foreignkey')
    op.drop_constraint(None, 'oog_pdbu_product', type_='foreignkey')
    op.drop_column('oog_pdbu_product', 'detail_info')
    op.drop_column('oog_pdbu_product', 'updated_user_id')
    op.drop_column('oog_pdbu_product', 'created_user_id')
    op.drop_column('oog_pdbu_product', 'updated_dt')
    op.drop_column('oog_pdbu_product', 'created_dt')
    op.drop_constraint(None, 'oog_machine', type_='foreignkey')
    op.drop_constraint(None, 'oog_machine', type_='foreignkey')
    op.drop_column('oog_machine', 'updated_user_id')
    op.drop_column('oog_machine', 'created_user_id')
    op.drop_column('oog_machine', 'updated_dt')
    op.drop_column('oog_machine', 'created_dt')
    op.drop_constraint(None, 'oog_location', type_='foreignkey')
    op.drop_constraint(None, 'oog_location', type_='foreignkey')
    op.drop_column('oog_location', 'updated_user_id')
    op.drop_column('oog_location', 'created_user_id')
    op.drop_column('oog_location', 'updated_dt')
    op.drop_column('oog_location', 'created_dt')
    op.create_table_comment(
        'oog_customer',
        'a company of our company group can be a customer. but need to add new customer to represent it.',
        existing_comment='company group can be a customer',
        schema=None
    )
    op.drop_constraint(None, 'oog_customer', type_='foreignkey')
    op.drop_constraint(None, 'oog_customer', type_='foreignkey')
    op.drop_column('oog_customer', 'updated_user_id')
    op.drop_column('oog_customer', 'created_user_id')
    op.drop_column('oog_customer', 'updated_dt')
    op.drop_column('oog_customer', 'created_dt')
    op.drop_constraint(None, 'oog_currency_ex', type_='foreignkey')
    op.drop_constraint(None, 'oog_currency_ex', type_='foreignkey')
    op.drop_column('oog_currency_ex', 'updated_user_id')
    op.drop_column('oog_currency_ex', 'created_user_id')
    op.drop_column('oog_currency_ex', 'updated_dt')
    op.drop_column('oog_currency_ex', 'created_dt')
    op.drop_constraint(None, 'oog_company', type_='foreignkey')
    op.drop_constraint(None, 'oog_company', type_='foreignkey')
    op.drop_constraint(None, 'oog_company', type_='foreignkey')
    op.drop_column('oog_company', 'location_id')
    op.drop_column('oog_company', 'updated_user_id')
    op.drop_column('oog_company', 'created_user_id')
    op.drop_column('oog_company', 'updated_dt')
    op.drop_column('oog_company', 'created_dt')
    op.create_table_comment(
        'oog_bu',
        'Business Unit. HDI, FPC, MSAP, RPCB, BTK etc',
        existing_comment='Business Unit (HDI, FPC, MSAP, RPCB, BTK etc)',
        schema=None
    )
    op.drop_constraint(None, 'oog_bu', type_='foreignkey')
    op.drop_constraint(None, 'oog_bu', type_='foreignkey')
    op.drop_column('oog_bu', 'updated_user_id')
    op.drop_column('oog_bu', 'created_user_id')
    op.drop_column('oog_bu', 'updated_dt')
    op.drop_column('oog_bu', 'created_dt')
    op.create_table_comment(
        'oog_bg',
        'Business Group. BG1, BG2, BG3 etc',
        existing_comment='Business Group (BG1, BG2, BG3 etc)',
        schema=None
    )
    op.drop_constraint(None, 'oog_bg', type_='foreignkey')
    op.drop_constraint(None, 'oog_bg', type_='foreignkey')
    op.drop_column('oog_bg', 'updated_user_id')
    op.drop_column('oog_bg', 'created_user_id')
    op.drop_column('oog_bg', 'updated_dt')
    op.drop_column('oog_bg', 'created_dt')
    op.drop_constraint(None, 'oog_asset', type_='foreignkey')
    op.drop_constraint(None, 'oog_asset', type_='foreignkey')
    op.drop_column('oog_asset', 'updated_user_id')
    op.drop_column('oog_asset', 'created_user_id')
    op.drop_column('oog_asset', 'updated_dt')
    op.drop_column('oog_asset', 'created_dt')
    op.drop_table('oog_yield_rate')
    op.drop_table('oog_pn_layer_sproc')
    op.drop_table('oog_pn_layer_proc')
    op.drop_table('oog_pn_layer')
    op.drop_table('oog_sub_proc_code')
    op.drop_table('oog_proc_code')
    op.drop_table('oog_part_num')
    op.drop_table('oog_user')
    # ### end Alembic commands ###
