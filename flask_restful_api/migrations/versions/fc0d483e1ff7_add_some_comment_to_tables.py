"""add some comment to tables

Revision ID: fc0d483e1ff7
Revises: 5b60e61778da
Create Date: 2024-12-24 22:36:20.265537

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc0d483e1ff7'
down_revision = '5b60e61778da'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'oog_asset',
        'one machine may have more than one asset',
        existing_comment=None,
        schema=None
    )
    op.alter_column('oog_machine', 'm_length',
               existing_type=sa.FLOAT(),
               comment='the length of the machine',
               existing_nullable=True)
    op.alter_column('oog_machine', 'm_width',
               existing_type=sa.FLOAT(),
               comment='the width of the machine',
               existing_nullable=True)
    op.alter_column('oog_machine', 'm_height',
               existing_type=sa.FLOAT(),
               comment='the height of the machine',
               existing_nullable=True)
    op.alter_column('oog_machine', 'cover_length',
               existing_type=sa.FLOAT(),
               comment='the length of the area of the machine occupied, include operation area, repairing are etc.',
               existing_nullable=True)
    op.alter_column('oog_machine', 'cover_width',
               existing_type=sa.FLOAT(),
               comment='the width of the area of the machine occupied, include operation area, repairing are etc.',
               existing_nullable=True)
    op.alter_column('oog_machine', 'verbose_name',
               existing_type=sa.VARCHAR(length=100),
               comment='the machine called by the worker normally',
               existing_nullable=True)
    op.alter_column('oog_machine', 'verbose_num',
               existing_type=sa.INTEGER(),
               comment='like Drill machine #1. the number 1 is the verbose num',
               existing_nullable=True)
    op.create_table_comment(
        'oog_machine',
        'the meta data of each machine',
        existing_comment=None,
        schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table_comment(
        'oog_machine',
        existing_comment='the meta data of each machine',
        schema=None
    )
    op.alter_column('oog_machine', 'verbose_num',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='like Drill machine #1. the number 1 is the verbose num',
               existing_nullable=True)
    op.alter_column('oog_machine', 'verbose_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='the machine called by the worker normally',
               existing_nullable=True)
    op.alter_column('oog_machine', 'cover_width',
               existing_type=sa.FLOAT(),
               comment=None,
               existing_comment='the width of the area of the machine occupied, include operation area, repairing are etc.',
               existing_nullable=True)
    op.alter_column('oog_machine', 'cover_length',
               existing_type=sa.FLOAT(),
               comment=None,
               existing_comment='the length of the area of the machine occupied, include operation area, repairing are etc.',
               existing_nullable=True)
    op.alter_column('oog_machine', 'm_height',
               existing_type=sa.FLOAT(),
               comment=None,
               existing_comment='the height of the machine',
               existing_nullable=True)
    op.alter_column('oog_machine', 'm_width',
               existing_type=sa.FLOAT(),
               comment=None,
               existing_comment='the width of the machine',
               existing_nullable=True)
    op.alter_column('oog_machine', 'm_length',
               existing_type=sa.FLOAT(),
               comment=None,
               existing_comment='the length of the machine',
               existing_nullable=True)
    op.drop_table_comment(
        'oog_asset',
        existing_comment='one machine may have more than one asset',
        schema=None
    )
    # ### end Alembic commands ###
